{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\agents\\\\MERN-app-agent-issuer\\\\client\\\\src\\\\components\\\\GenerateStoreCred\\\\GenerateStoreCred.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateStoreCred() {\n  _s();\n  const [branches, setbranches] = useState([]);\n  useEffect(() => {\n    // Fetch data from the backend server\n    axios.get(\"http://localhost:3007/view-stores\").then(response => {\n      //setInvitations(response.data);\n      const data = response.data;\n      if (Array.isArray(data)) {\n        setbranches(data);\n      } else {\n        console.error(\"branches data is not an array:\", data);\n      }\n    }).catch(error => {\n      console.error(\"Failed to fetch stores:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_s(GenerateStoreCred, \"dwOESYKhAef/mW4m1fo8ULqRyek=\");\n_c = GenerateStoreCred;\nexport default GenerateStoreCred;\nvar _c;\n$RefreshReg$(_c, \"GenerateStoreCred\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GenerateStoreCred","_s","branches","setbranches","useEffect","axios","get","then","response","data","Array","isArray","console","error","catch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/agents/MERN-app-agent-issuer/client/src/components/GenerateStoreCred/GenerateStoreCred.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction GenerateStoreCred() {\r\n    const [branches, setbranches] = useState([]);\r\n    useEffect(() => {\r\n        // Fetch data from the backend server\r\n        axios\r\n          .get(\"http://localhost:3007/view-stores\")\r\n          .then((response) => {\r\n            //setInvitations(response.data);\r\n            const data = response.data;\r\n            if (Array.isArray(data)) {\r\n              setbranches(data);\r\n            } else {\r\n              console.error(\"branches data is not an array:\", data);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Failed to fetch stores:\", error);\r\n          });\r\n      }, []);\r\n  return <div>\r\n        \r\n  </div>;\r\n}\r\n\r\nexport default GenerateStoreCred;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5CO,SAAS,CAAC,MAAM;IACZ;IACAC,KAAK,CACFC,GAAG,CAAC,mCAAmC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAC1B,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvBN,WAAW,CAACM,IAAI,CAAC;MACnB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEJ,IAAI,CAAC;MACvD;IACF,CAAC,CAAC,CACDK,KAAK,CAAED,KAAK,IAAK;MAChBD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACV,oBAAOd,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AACR;AAACjB,EAAA,CAtBQD,iBAAiB;AAAAmB,EAAA,GAAjBnB,iBAAiB;AAwB1B,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}