{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\agents\\\\MERN-app-agent-issuer\\\\client\\\\src\\\\components\\\\GenerateStoreCred\\\\GenerateStoreCred.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport QRCode from \"qrcode.react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateStoreCred() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const branch = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.branch;\n  if (!branch) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Missing branch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this);\n  }\n  const generateRandomPassword = () => {\n    // Generate a random password\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let password = \"\";\n    for (let i = 0; i < 8; i++) {\n      password += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return password;\n  };\n  const username = branch.branchManager;\n  const password = generateRandomPassword();\n  const credentialData = {\n    username: username,\n    password: password\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Generate Login Credentials for \", branch.branchName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: \"18rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: branch.branchName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"card-subtitle mb-2 text-muted\",\n          children: branch.branchManager\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Generate a QR code containing Login credentials to send traditionally (on paper) to this store.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), showQRCode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(QRCode, {\n            value: JSON.stringify(credentialData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Password: \", password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"card-link\",\n          onClick: handleGenerateQRCode,\n          children: \"Generate QR code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"card-link\",\n          children: \"Print\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(GenerateStoreCred, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = GenerateStoreCred;\nexport default GenerateStoreCred;\nvar _c;\n$RefreshReg$(_c, \"GenerateStoreCred\");","map":{"version":3,"names":["React","useLocation","QRCode","jsxDEV","_jsxDEV","GenerateStoreCred","_s","_location$state","location","branch","state","children","fileName","_jsxFileName","lineNumber","columnNumber","generateRandomPassword","characters","password","i","charAt","Math","floor","random","length","username","branchManager","credentialData","branchName","className","style","width","showQRCode","value","JSON","stringify","href","onClick","handleGenerateQRCode","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/agents/MERN-app-agent-issuer/client/src/components/GenerateStoreCred/GenerateStoreCred.js"],"sourcesContent":["import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\n\r\nfunction GenerateStoreCred() {\r\n    const location = useLocation();\r\n    const branch = location.state?.branch;\r\n  \r\n    if (!branch) {\r\n      return <div>Error: Missing branch data</div>;\r\n    }\r\n\r\n    const generateRandomPassword = () => {\r\n        // Generate a random password\r\n        const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        let password = \"\";\r\n        for (let i = 0; i < 8; i++) {\r\n          password += characters.charAt(Math.floor(Math.random() * characters.length));\r\n        }\r\n        return password;\r\n      };\r\n    \r\n      const username = branch.branchManager;\r\n      const password = generateRandomPassword();\r\n    \r\n      const credentialData = {\r\n        username: username,\r\n        password: password,\r\n      };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Generate Login Credentials for {branch.branchName}</h1>\r\n      <div className=\"card\" style={{ width: \"18rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{branch.branchName}</h5>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">{branch.branchManager}</h6>\r\n          <p className=\"card-text\">\r\n            Generate a QR code containing Login credentials to send traditionally (on paper) to this store.\r\n          </p>\r\n          {showQRCode ? (\r\n            <div>\r\n              <QRCode value={JSON.stringify(credentialData)} />\r\n              <p>Username: {username}</p>\r\n              <p>Password: {password}</p>\r\n            </div>\r\n          ) : (\r\n            <a href=\"#\" className=\"card-link\" onClick={handleGenerateQRCode}>\r\n              Generate QR code\r\n            </a>\r\n          )}\r\n          <a href=\"/\" className=\"card-link\">\r\n            Print\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateStoreCred;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}