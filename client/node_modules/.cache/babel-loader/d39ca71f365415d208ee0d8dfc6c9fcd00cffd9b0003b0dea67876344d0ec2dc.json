{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\agents\\\\MERN-app-agent-issuer\\\\client\\\\src\\\\components\\\\IssuerHome\\\\IssueCredential.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n// import { Modal } from \"react-bootstrap\";\n// import Popup from \"reactjs-popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IssueCredential() {\n  _s();\n  const {\n    did\n  } = useParams();\n  const [isCredentialOfferSent, setIsCredentialOfferSent] = useState(false);\n  const handleSchema = () => {\n    axios.post(\"http://localhost:3007\");\n  };\n  const handleIssueCredential = () => {\n    axios.post(\"http://localhost:3007/issue-credential\", {\n      didHolder: did\n    }).then(() => {\n      setIsCredentialOfferSent(true);\n    }).catch(error => {\n      console.error(\"Failed to send credential offer:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        padding: \"20px\"\n      },\n      children: \"Hello Issuer, in order to legitimize this branch you need to follow these steps to issue the Verifiable Credential:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSchema\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isCredentialOfferSent ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Credential offer sent!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light\",\n      onClick: handleIssueCredential,\n      disabled: isCredentialOfferSent,\n      children: isCredentialOfferSent ? \"Credential Offer Sent\" : \"Issue Credential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(IssueCredential, \"y9/NrVhYAGA7uWe9dYNI0/4MwQs=\", false, function () {\n  return [useParams];\n});\n_c = IssueCredential;\nexport default IssueCredential;\nvar _c;\n$RefreshReg$(_c, \"IssueCredential\");","map":{"version":3,"names":["React","useState","axios","useParams","jsxDEV","_jsxDEV","IssueCredential","_s","did","isCredentialOfferSent","setIsCredentialOfferSent","handleSchema","post","handleIssueCredential","didHolder","then","catch","error","console","className","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/agents/MERN-app-agent-issuer/client/src/components/IssuerHome/IssueCredential.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n// import { Modal } from \"react-bootstrap\";\r\n// import Popup from \"reactjs-popup\";\r\n\r\nfunction IssueCredential() {\r\n  const { did } = useParams();\r\n  const [isCredentialOfferSent, setIsCredentialOfferSent] = useState(false);\r\n\r\n  const handleSchema = () => {\r\n    axios.post(\"http://localhost:3007\")\r\n  }\r\n\r\n  const handleIssueCredential = () => {\r\n    axios\r\n      .post(\"http://localhost:3007/issue-credential\", { didHolder: did })\r\n      .then(() => {\r\n        setIsCredentialOfferSent(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to send credential offer:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 style={{ padding: \"20px\" }}>\r\n        Hello Issuer, in order to legitimize this branch you need to follow\r\n        these steps to issue the Verifiable Credential:\r\n      </h2>\r\n      <button onClick={handleSchema}></button>\r\n      {/* <ul>\r\n        <li>\r\n          <b>Step 1:</b> Click on <i>Create Schema</i> to define the structure\r\n          of the Verifiable Credential you want to issue &nbsp;\r\n        </li>\r\n        <li>\r\n          <b>Step 2:</b> Create the Credential Definition for the Specific\r\n          Schema: this will allow you to create the necessary cryptographic keys\r\n          for a secure information.\r\n        </li>\r\n        <li>\r\n          <b>Step 3:</b> Issue Credential and Send it to the Holder which is the\r\n          Branch you want to legitmize\r\n        </li>\r\n      </ul> */}\r\n      {isCredentialOfferSent ? (\r\n        <p>Credential offer sent!</p>\r\n      ) : (\r\n        <button\r\n          className=\"btn btn-light\"\r\n          onClick={handleIssueCredential}\r\n          disabled={isCredentialOfferSent}\r\n        >\r\n          {isCredentialOfferSent ? \"Credential Offer Sent\" : \"Issue Credential\"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IssueCredential;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAI,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACM,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzE,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzBT,KAAK,CAACU,IAAI,CAAC,uBAAuB,CAAC;EACrC,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCX,KAAK,CACFU,IAAI,CAAC,wCAAwC,EAAE;MAAEE,SAAS,EAAEN;IAAI,CAAC,CAAC,CAClEO,IAAI,CAAC,MAAM;MACVL,wBAAwB,CAAC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBf,OAAA;MAAIgB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAGhC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLrB,OAAA;MAAQsB,OAAO,EAAEhB;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAgBvCjB,qBAAqB,gBACpBJ,OAAA;MAAAe,QAAA,EAAG;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE7BrB,OAAA;MACEc,SAAS,EAAC,eAAe;MACzBQ,OAAO,EAAEd,qBAAsB;MAC/Be,QAAQ,EAAEnB,qBAAsB;MAAAW,QAAA,EAE/BX,qBAAqB,GAAG,uBAAuB,GAAG;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAtDQD,eAAe;EAAA,QACNH,SAAS;AAAA;AAAA0B,EAAA,GADlBvB,eAAe;AAwDxB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}