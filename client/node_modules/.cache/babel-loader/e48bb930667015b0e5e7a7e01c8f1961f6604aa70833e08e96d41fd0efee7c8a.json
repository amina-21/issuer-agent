{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\agents\\\\MERN-app-agent-issuer\\\\client\\\\src\\\\components\\\\IssuerHome\\\\IssueCredential.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useParams } from \"react-router-dom\";\n// // import { Modal } from \"react-bootstrap\";\n// // import Popup from \"reactjs-popup\";\n\n// function IssueCredential() {\n//   const { did } = useParams();\n//   const [isCredentialOfferSent, setIsCredentialOfferSent] = useState(false);\n\n//   const handleIssueCredential = () => {\n//     axios\n//       .post(\"http://localhost:3007/issue-credential\", { didHolder: did })\n//       .then(() => {\n//         setIsCredentialOfferSent(true);\n//       })\n//       .catch((error) => {\n//         console.error(\"Failed to send credential offer:\", error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2 style={{ padding: \"20px\" }}>\n//         Hello Issuer, in order to legitimize this branch you need to follow\n//         these steps to issue the Verifiable Credential:\n//       </h2>\n\n//       {isCredentialOfferSent ? (\n//         <p>Credential offer sent!</p>\n//       ) : (\n//         <button\n//           className=\"btn btn-light\"\n//           onClick={handleIssueCredential}\n//           disabled={isCredentialOfferSent}\n//         >\n//           {isCredentialOfferSent ? \"Credential Offer Sent\" : \"Issue Credential\"}\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default IssueCredential;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IssueCredential() {\n  _s();\n  const {\n    did\n  } = useParams();\n  const [isCredentialOfferSent, setIsCredentialOfferSent] = useState(false);\n  useEffect(() => {\n    // Fetch the branch data from the backend API\n    axios.get(`http://localhost:3007/branch/${did}`).then(response => {\n      const branchData = response.data;\n      if (branchData.legitimizedFromIssuer === \"yes\") {\n        setIsCredentialOfferSent(true);\n      }\n    }).catch(error => {\n      console.error(\"Failed to fetch branch data:\", error);\n    });\n  }, [did]);\n  const handleIssueCredential = () => {\n    axios.post(\"http://localhost:3007/issue-credential\", {\n      didHolder: did\n    }).then(() => {\n      setIsCredentialOfferSent(true);\n    }).catch(error => {\n      console.error(\"Failed to send credential offer:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        padding: \"20px\"\n      },\n      children: \"Hello Issuer, in order to legitimize this branch you need to follow these steps to issue the Verifiable Credential:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isCredentialOfferSent ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Credential offer sent!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light\",\n      onClick: handleIssueCredential,\n      disabled: isCredentialOfferSent,\n      children: isCredentialOfferSent ? \"Credential Offer Sent\" : \"Issue Credential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(IssueCredential, \"7f5pndRATojM5L15rkBqeFiX6c4=\", false, function () {\n  return [useParams];\n});\n_c = IssueCredential;\nexport default IssueCredential;\nvar _c;\n$RefreshReg$(_c, \"IssueCredential\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","IssueCredential","_s","did","isCredentialOfferSent","setIsCredentialOfferSent","get","then","response","branchData","data","legitimizedFromIssuer","catch","error","console","handleIssueCredential","post","didHolder","className","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/agents/MERN-app-agent-issuer/client/src/components/IssuerHome/IssueCredential.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useParams } from \"react-router-dom\";\r\n// // import { Modal } from \"react-bootstrap\";\r\n// // import Popup from \"reactjs-popup\";\r\n\r\n// function IssueCredential() {\r\n//   const { did } = useParams();\r\n//   const [isCredentialOfferSent, setIsCredentialOfferSent] = useState(false);\r\n\r\n\r\n//   const handleIssueCredential = () => {\r\n//     axios\r\n//       .post(\"http://localhost:3007/issue-credential\", { didHolder: did })\r\n//       .then(() => {\r\n//         setIsCredentialOfferSent(true);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Failed to send credential offer:\", error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2 style={{ padding: \"20px\" }}>\r\n//         Hello Issuer, in order to legitimize this branch you need to follow\r\n//         these steps to issue the Verifiable Credential:\r\n//       </h2>\r\n      \r\n//       {isCredentialOfferSent ? (\r\n//         <p>Credential offer sent!</p>\r\n//       ) : (\r\n//         <button\r\n//           className=\"btn btn-light\"\r\n//           onClick={handleIssueCredential}\r\n//           disabled={isCredentialOfferSent}\r\n//         >\r\n//           {isCredentialOfferSent ? \"Credential Offer Sent\" : \"Issue Credential\"}\r\n//         </button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default IssueCredential;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction IssueCredential() {\r\n  const { did } = useParams();\r\n  const [isCredentialOfferSent, setIsCredentialOfferSent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the branch data from the backend API\r\n    axios\r\n      .get(`http://localhost:3007/branch/${did}`)\r\n      .then((response) => {\r\n        const branchData = response.data;\r\n        if (branchData.legitimizedFromIssuer === \"yes\") {\r\n          setIsCredentialOfferSent(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to fetch branch data:\", error);\r\n      });\r\n  }, [did]);\r\n\r\n  const handleIssueCredential = () => {\r\n    axios\r\n      .post(\"http://localhost:3007/issue-credential\", { didHolder: did })\r\n      .then(() => {\r\n        setIsCredentialOfferSent(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to send credential offer:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 style={{ padding: \"20px\" }}>\r\n        Hello Issuer, in order to legitimize this branch you need to follow\r\n        these steps to issue the Verifiable Credential:\r\n      </h2>\r\n\r\n      {isCredentialOfferSent ? (\r\n        <p>Credential offer sent!</p>\r\n      ) : (\r\n        <button\r\n          className=\"btn btn-light\"\r\n          onClick={handleIssueCredential}\r\n          disabled={isCredentialOfferSent}\r\n        >\r\n          {isCredentialOfferSent ? \"Credential Offer Sent\" : \"Issue Credential\"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IssueCredential;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAI,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACM,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzEC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFS,GAAG,CAAE,gCAA+BH,GAAI,EAAC,CAAC,CAC1CI,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI;MAChC,IAAID,UAAU,CAACE,qBAAqB,KAAK,KAAK,EAAE;QAC9CN,wBAAwB,CAAC,IAAI,CAAC;MAChC;IACF,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;EAET,MAAMY,qBAAqB,GAAGA,CAAA,KAAM;IAClClB,KAAK,CACFmB,IAAI,CAAC,wCAAwC,EAAE;MAAEC,SAAS,EAAEd;IAAI,CAAC,CAAC,CAClEI,IAAI,CAAC,MAAM;MACVF,wBAAwB,CAAC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC;EAED,oBACEb,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAIoB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAGhC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEJrB,qBAAqB,gBACpBJ,OAAA;MAAAmB,QAAA,EAAG;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE7BzB,OAAA;MACEkB,SAAS,EAAC,eAAe;MACzBQ,OAAO,EAAEX,qBAAsB;MAC/BY,QAAQ,EAAEvB,qBAAsB;MAAAe,QAAA,EAE/Bf,qBAAqB,GAAG,uBAAuB,GAAG;IAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CAlDQD,eAAe;EAAA,QACNH,SAAS;AAAA;AAAA8B,EAAA,GADlB3B,eAAe;AAoDxB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}